import{_ as e,D as o,c as i,I as a,a9 as t,o as r}from"./chunks/framework.C1DFsOn5.js";const _=JSON.parse('{"title":"通知栏组件 INotify","description":"","frontmatter":{},"headers":[],"relativePath":"components/notify/index.md","filePath":"packages/item-ui/src/notify/index.md"}'),c={name:"components/notify/index.md"},n=t('<h1 id="通知栏组件-inotify" tabindex="-1">通知栏组件 INotify <a class="header-anchor" href="#通知栏组件-inotify" aria-label="Permalink to &quot;通知栏组件 INotify&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>这是一个用于显示通知栏浮窗提示的组件。</p><h2 id="代码演示" tabindex="-1">代码演示 <a class="header-anchor" href="#代码演示" aria-label="Permalink to &quot;代码演示&quot;">​</a></h2>',4),h=t('<blockquote><p>注意：若tabList中存在key为<code>other</code>的项，tabList根据<code>notificationType</code>匹配不到类型的数据会被归纳到该分类下</p></blockquote><blockquote><p>注意：组件库暂时没有支持多语言，预制模板中若存在需要i18n翻译的字段，需要添加i18n映射字段由外部传入翻译后的文字，格式为 <code>i18n: {&#39;i18n-[field]&#39;: &#39;i18nFieldName&#39;}</code></p></blockquote><h2 id="属性-inotify-inotifysdk" tabindex="-1">属性（INotify / INotifySdk） <a class="header-anchor" href="#属性-inotify-inotifysdk" aria-label="Permalink to &quot;属性（INotify / INotifySdk）&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>showHoverBellLine</td><td>鼠标hover是否显示底部下划线</td><td><code>Boolean</code></td><td><code>true</code></td></tr><tr><td>bellLineSpace</td><td>铃铛和底部下划线的间距（可配合el-porver自带的属性<code>offset</code> 调整浮窗跟下划线的距离）</td><td><code>String</code></td><td><code>10px</code></td></tr><tr><td>notifyListMaxHeight</td><td>消息列的最大高度（超出滚动）</td><td><code>String</code></td><td><code>300px</code></td></tr><tr><td>tabList</td><td>选项卡的配置(数据格式见示例)</td><td><code>Array</code></td><td><code>[]</code></td></tr><tr><td>notifyList</td><td>消息列表(数据格式见示例)</td><td><code>Array</code></td><td><code>[]</code></td></tr><tr><td>footerBtnList</td><td>消息底部按钮的配置(数据格式见示例)</td><td><code>Array</code></td><td><code>[]</code></td></tr><tr><td>emptyName</td><td>无数据的文字信息</td><td><code>String</code></td><td><code>No Data</code></td></tr><tr><td>i18n</td><td>i18n映射字段由外部传入翻译后的文字，格式为 <code>i18n: {&#39;i18n-[field]&#39;: &#39;i18nFieldName&#39;}</code></td><td><code>Object</code></td><td><code>{}</code></td></tr><tr><td>继承element-plus属性</td><td>该组件继承el-popover的所有属性，可移步<a href="https://element-plus.org/zh-CN/component/popover.html" target="_blank" rel="noreferrer">el-popover</a>直接使用里面的属性</td><td>-</td><td>-</td></tr></tbody></table><h2 id="属性-inotifysdk" tabindex="-1">属性（INotifySdk） <a class="header-anchor" href="#属性-inotifysdk" aria-label="Permalink to &quot;属性（INotifySdk）&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>userSystemNotificationSearchApi</td><td></td><td><code>Promise</code></td><td><code>new Promise(() =&gt; {})</code></td></tr><tr><td>intervalTime</td><td>获取最新消息的轮询时间（毫秒）</td><td><code>Number</code></td><td><code>15000</code></td></tr></tbody></table><h2 id="事件-inotify-inotifysdk" tabindex="-1">事件（INotify / INotifySdk） <a class="header-anchor" href="#事件-inotify-inotifysdk" aria-label="Permalink to &quot;事件（INotify / INotifySdk）&quot;">​</a></h2><table tabindex="0"><thead><tr><th>事件名</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>clickNotify</td><td>点击某条消息触发的回调</td><td><code>Function</code></td><td><code>(item: Object) =&gt; void</code></td></tr><tr><td>changeTab</td><td>点击某条消息触发的回调</td><td><code>Function</code></td><td><code>(item: Object) =&gt; void</code></td></tr><tr><td>继承element-plus事件</td><td>该组件继承el-popover的所有事件，可，可移步<a href="https://element-plus.org/zh-CN/component/popover.html" target="_blank" rel="noreferrer">el-popover</a>直接使用里面的事件</td><td>-</td><td>-</td></tr></tbody></table><h2 id="方法-inotify" tabindex="-1">方法（INotify） <a class="header-anchor" href="#方法-inotify" aria-label="Permalink to &quot;方法（INotify）&quot;">​</a></h2><table tabindex="0"><thead><tr><th>方法名</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>changeTab</td><td>改变tab选中的项</td><td><code>Function</code></td><td><code>(item: Object) =&gt; void</code></td></tr><tr><td>notifyListGroup</td><td>可直接获取到消息列表分组后的数据</td><td><code>Object</code></td><td><code>{}</code></td></tr><tr><td>currentNotifyList</td><td>可直接获取到当前选中tab消息的列表数据</td><td><code>Array</code></td><td><code>[]</code></td></tr></tbody></table><h2 id="方法-inotifysdk" tabindex="-1">方法（INotifySdk） <a class="header-anchor" href="#方法-inotifysdk" aria-label="Permalink to &quot;方法（INotifySdk）&quot;">​</a></h2><table tabindex="0"><thead><tr><th>方法名</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>interval</td><td>定时器对象</td><td><code>Function</code></td><td><code>(item: Object) =&gt; void</code></td></tr></tbody></table><h2 id="插槽-inotify-inotifysdk" tabindex="-1">插槽（INotify / INotifySdk） <a class="header-anchor" href="#插槽-inotify-inotifysdk" aria-label="Permalink to &quot;插槽（INotify / INotifySdk）&quot;">​</a></h2><table tabindex="0"><thead><tr><th>插槽名</th><th>说明</th></tr></thead><tbody><tr><td>detail</td><td>用于自定义每一项消息中的消息描述展示</td></tr></tbody></table>',14);function l(s,f,b,y,p,m){const d=o("demo");return r(),i("div",null,[n,a(d,{src:"packages/item-ui/src/notify/demos/basic.vue"}),h])}const k=e(c,[["render",l]]);export{_ as __pageData,k as default};
